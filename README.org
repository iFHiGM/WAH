* WAH

做什么 和 怎么做 - What And How

这是一个遵从某种意志/哲学/程序/习惯/框架做或者不做，事情或者不是事情的事情的意志/哲学/程序/习惯/框架。

它由3个部分组成，WHAT（需求），HOW（实现），AND（连接）。

** WAH哲学

WAH更多的是一种哲学，而非是某个工具（他只是在这里，在某些具体任务中，被实例化为了一种工具），如果必要，可以存在任意多个wah实现，（每个人，每个任务），只要它遵从WAH哲学：

*** WHAT
0. 婴儿，无极，朴。
1. 描述需求，做什么（可能含有步骤），为什么（背景知识），限制条件（有可能需要测试某些东西）等一切在这件事情未完成之前可以附加的信息。
1. 不限制表达格式，我个人喜欢（渴望）飞，所以使用fly作为文件（可能是文件的形态）后缀。
3. 可以在其中创造思路，并且组件非常基础，但解析模块复用性极高。

*** HOW
0. 生于毫末，起于累土。
1. 如何做，实现WHAT中需要实现的步骤，可能是检测，编译，执行，等等可以具体的映射到实际完成任务的每一步的东西。
2. 使用你能使用的任何工具，包括未来的人工智能。

*** AND
0. 天之道，人之道。
1. AND作为引擎，连接WHAT（需求）和HOW（实现）。
2. 解析WHAT，得到一个HOW事务结构，其中应该（尽可能）包含成功完成事务的验收条件。
3. 检查HOW实现，匹配并生成执行体（用来最终完成某项任务）。
4. 触发执行，检查结果。
5. *（可选的实现）任务暂停和继续。

三者之间的关联：
0. AND作为一种动态接口而存在，或者叫动态协议，是可以不断变化和维护的，不强制与WHAT和HOW做绑定，只是因为任务的关系，偶然链接到这个宇宙中随机的两个WHAT和HOW。
1. WHAT应该有权力定义和影响最终任务的呈现方式，验证方式，但一般不应该影响HOW如何具体的实现（因为现实从不重复）。
2. HOW相对而言会更简单，更程序化一些，因为其已经是具体实现层面的事务，只要要求明确，就应该优先以最简单（但是的保证结果的正确和合理）的方式实现。
3. 三部分功能的简单总结：
- AND作为动态接口链接WHAT与HOW。
- WHAT是决策者，验证者，关注（任务）者。
- HOW是实现者。
- AND是执行者，发布（任务）者。


** WAH实现

当然，本仓库本身会不断提供（可能？）各种WAH实现，作为快速使用已有WAH工具实现特定的任务。

** WAH未来展望

WAH所代表的思想一定会在未来（或许已经在过去或者现在）的某些领域得到体现，不管是高级人工智能，还是更高级别的自动化生产和制造，抑或是各种引发人类进化的事件，我所能做的，只是用这个东西做一些自己的事情，让这些展望，至少能在一个人类的身上得到体现（也许是某种笨拙的体现），进而与某些人对话，某些事物对话，与过去，将来，更是与现在此时的所有，诚挚的对话！

** WAH之自举
WHAT: 实现WAH的想法。
HOW: WAH哲学。
AND: 这个世界的一切。

